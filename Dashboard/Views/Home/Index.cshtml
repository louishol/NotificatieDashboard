@model Lib.ViewModels.HomeViewModel
@{
    ViewBag.Title = "Home Page";
}
@Scripts.Render("~/bundles/jquery")
<div class="flex-container">

    <div class="flex-item">

        <a href="/Customer/Create" class="list-group-item active"><span style="float: right"><div class="glyphicon glyphicon-plus"></div></span> Klanten</a>

        @foreach (var item in Model.Customers)
        {
            @Html.ActionLink((String)item.companyName, "Details", "Customer", new { id = item.customerId }, new { @class = "list-group-item" });

        }
    </div>
    <div class="flex-item">
        <a href="/Application/Create" class="list-group-item active"><span style="float: right">
            <p id="newapplication" class="glyphicon glyphicon-plus hover"></p>
         </span> Applicaties
        </a>
        @foreach (var item in Model.Applications)
        {   
            @*@Html.ActionLink((String)item.name, "Details", "Application", new { id = item.applicationId}, new { @class = "list-group-item" });*@
            <a href="/Application/Details/@item.applicationId" class="list-group-item">@item.name <span class="badge">V @item.version</span></a>
        }
        @if (Model.ApplicationCount > 10)
        {
            <nav>
                <ul class="pagination">
                    <li class="page-item">
                        <a class="page-link" href="#" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                            <span class="sr-only">Previous</span>
                        </a>
                    </li>
               
                    @for (int i = 1; i <= Model.pageNumersApplication; i++)
                    {
                        <li class="page-item"><a class="page-link" id="pagination-item" data-id="@i">@i</a></li>
                    }
                    <li class="page-item">
                        <a class="page-link" href="#" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                            <span class="sr-only">Next</span>
                        </a>
                    </li>
                </ul>
            </nav>
        }

    </div>
    <div class="flex-item">
        <a class="list-group-item active"><span class="badge"></span>Verdeling besturingssystemen  </a>
        <div id="piechart"></div>
    </div>
 
    <div class="flex-item">
        <a href="#" class="list-group-item" style="background-color:lightgreen">
            Onlangs toegevoegde apparaten
        </a>
        @foreach (var item in Model.Devices)
        {
            <a href="#" class="list-group-item">@item.operatingSystemVersion - @item.uniqueId <span class="badge">@item.tblApplications.name</span></a>
        }
        
    </div>
    <div class="flex-item">
        <a href="#" class="list-group-item" style="background-color:orange">
            Onlangs toegevoegde crash reports
        </a>
        @foreach (var item in Model.CrashReports)

        {
          <a href="#" class="list-group-item">@item.report</a>
        }
     
    </div>
    <div class="flex-item">
        <a href="#" class="list-group-item active">
            Populaire Applicaties :
        </a>
        @foreach (var item in Model.Popular)
        {
            <a href="../Application/Details/@item.applicationId" class="list-group-item"><span class="badge">@item.devices</span>@item.applicationName
</a>
        }
    </div>
</div>

<script type="text/javascript">



        $(".page-item").on("click", function() {
          
           var pagination =  $(this).text();
           var data = { pageNr: pagination};

           $.get("/Application/GetNewSetOfApplications", data, function(response){
           
               console.log(response);
           });
        
        });



        google.charts.load('current', { 'packages': ['corechart'] });
        var appData = [['OS', 'Counter']];

        function addDataToArray(OS, counter) {
            appData.push([OS, counter]);
        }
        @foreach (var app in Model.OSStatistics)
        {
            @:addDataToArray('@app.name', @app.counter);
        }
        google.charts.setOnLoadCallback(drawChart);
        function drawChart() {
            var data = google.visualization.arrayToDataTable(appData);
            var options = {};
            var chart = new google.visualization.PieChart(document.getElementById('piechart'));
            chart.draw(data, options);
        }
 
</script>